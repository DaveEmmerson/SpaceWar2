<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests - Coverage Report</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<link rel="stylesheet" type="text/css" href="report.css" />

</head><body><div class="container">
<h1>Summary</h1>
<table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Class:</th><td>DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests</td></tr>
<tr><th>Assembly:</th><td>DEMW.SpaceWar2Tests</td></tr>
<tr><th>File(s):</th><td><a href="#CUsersDaveDocumentsVisualStudio2010ProjectsSpaceWar2SpaceWar2TestsGameObjectsShipComponentsShieldTestscs">C:\Users\Dave\Documents\Visual Studio 2010\Projects\SpaceWar2\SpaceWar2Tests\GameObjects\ShipComponents\ShieldTests.cs</a></td></tr>
<tr><th>Coverage:</th><td>100%</td></tr>
<tr><th>Covered lines:</th><td>57</td></tr>
<tr><th>Coverable lines:</th><td>57</td></tr>
<tr><th>Total lines:</th><td>142</td></tr>
</table>
<h1>Metrics</h1>
<table class="overview">
<tr><th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::SetUp()">SetUp()</td><td>2</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Damage_reduces_shieldLevel_by_DamageAmount_and_returns_zero_when_DamageAmound_is_less_than_shieldLevel()">Damage_reduces_shieldLevel_by_DamageAmount_and_returns_zero_when_DamageAmound_is_less_than_shieldLevel()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Damage_does_not_reduce_shieldLevel_when_DamageAmount_is_zero()">Damage_does_not_reduce_shieldLevel_when_DamageAmount_is_zero()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Damage_does_not_affect_shieldLevel_when_DamageAmount_is_negative_and_an_exception_is_thrown()">Damage_does_not_affect_shieldLevel_when_DamageAmount_is_negative_and_an_exception_is_thrown()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Damage_reduces_ShieldLevel_to_zero_and_returns_excess_when_DamageAmound_is_greater_than_SheildLevel()">Damage_reduces_ShieldLevel_to_zero_and_returns_excess_when_DamageAmound_is_greater_than_SheildLevel()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Recharge_on_fully_charged_shield_does_not_call_RequestEnergy_on_ship()">Recharge_on_fully_charged_shield_does_not_call_RequestEnergy_on_ship()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Recharge_requests_energy_from_ship_and_increases_SheildLevel_by_factor_of_deltaT_and_RechargeRate()">Recharge_requests_energy_from_ship_and_increases_SheildLevel_by_factor_of_deltaT_and_RechargeRate()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Recharge_only_requests_what_it_needs_to_reach_maxium_ShieldLevel()">Recharge_only_requests_what_it_needs_to_reach_maxium_ShieldLevel()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Recharge_has_no_effect_if_no_energy_available()">Recharge_has_no_effect_if_no_energy_available()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void DEMW.SpaceWar2Tests.GameObjects.ShipComponents.ShieldTests::Recharge_only_recharges_by_available_energy()">Recharge_only_recharges_by_available_energy()</td><td>1</td><td>100</td><td>100</td></tr>
</table>
<h1>File(s)</h1>
<h2 id="CUsersDaveDocumentsVisualStudio2010ProjectsSpaceWar2SpaceWar2TestsGameObjectsShipComponentsShieldTestscs">C:\Users\Dave\Documents\Visual Studio 2010\Projects\SpaceWar2\SpaceWar2Tests\GameObjects\ShipComponents\ShieldTests.cs</h2>
<table>
<tr><th></th><th>#</th><th>Line</th><th>Coverage</th></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>1</code></td><td class="light"><code>using&nbsp;DEMW.SpaceWar2.GameObjects;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>2</code></td><td class="light"><code>using&nbsp;DEMW.SpaceWar2.GameObjects.ShipComponents;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>3</code></td><td class="light"><code>using&nbsp;NSubstitute;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>4</code></td><td class="light"><code>using&nbsp;NUnit.Framework;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>5</code></td><td class="light"><code>using&nbsp;System;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>6</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>7</code></td><td class="light"><code>namespace&nbsp;DEMW.SpaceWar2Tests.GameObjects.ShipComponents</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>8</code></td><td class="light"><code>{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>9</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;[TestFixture]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>10</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;ShieldTests</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>11</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>12</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IShip&nbsp;_ship;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>13</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Shield&nbsp;_shield;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>14</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;float&nbsp;shieldStartLevel&nbsp;=&nbsp;100F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>15</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;const&nbsp;float&nbsp;shieldRechargeRate&nbsp;=&nbsp;1F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>16</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>17</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[SetUp]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>18</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;SetUp()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">9</td><td class="right"><code>19</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">9</td><td class="right"><code>20</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ship&nbsp;=&nbsp;Substitute.For&lt;IShip&gt;();</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">13</td><td class="right"><code>21</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ship.RequestEnergy(Arg.Any&lt;float&gt;()).Returns(x&nbsp;=&gt;&nbsp;x[0]);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>22</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">9</td><td class="right"><code>23</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield&nbsp;=&nbsp;new&nbsp;Shield(_ship,&nbsp;shieldStartLevel,&nbsp;shieldRechargeRate);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">9</td><td class="right"><code>24</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>25</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>26</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>27</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Damage_reduces_shieldLevel_by_DamageAmount_and_returns_zero_when_DamageAmound_is_less_than_shieldLev</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>28</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>29</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;damage&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;10F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>30</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>31</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;damageRemaining&nbsp;=&nbsp;_shield.Damage(damage);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>32</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>33</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(shieldStartLevel&nbsp;-&nbsp;damage,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>34</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(0F,&nbsp;damageRemaining);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>35</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>36</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>37</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>38</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Damage_does_not_reduce_shieldLevel_when_DamageAmount_is_zero()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>39</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>40</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;damageRemaining&nbsp;=&nbsp;_shield.Damage(0f);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>41</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>42</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(shieldStartLevel,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>43</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(0F,&nbsp;damageRemaining);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>44</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>45</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>46</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>47</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Damage_does_not_affect_shieldLevel_when_DamageAmount_is_negative_and_an_exception_is_thrown()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>48</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>49</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;negativeDamage&nbsp;=&nbsp;-10f;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>50</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>51</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;damageRemaining&nbsp;=&nbsp;negativeDamage;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>52</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.Throws&lt;ArgumentException&gt;(()=&gt;</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>53</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>54</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;damageRemaining&nbsp;=&nbsp;_shield.Damage(negativeDamage);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>55</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>56</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>57</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(shieldStartLevel,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>58</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(negativeDamage,&nbsp;damageRemaining);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>59</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>60</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>61</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>62</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Damage_reduces_ShieldLevel_to_zero_and_returns_excess_when_DamageAmound_is_greater_than_SheildLevel(</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>63</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>64</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;excessDamage&nbsp;=&nbsp;50F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>65</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;damage&nbsp;=&nbsp;shieldStartLevel&nbsp;+&nbsp;excessDamage;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>66</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>67</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;damageRemaining&nbsp;=&nbsp;_shield.Damage(damage);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>68</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>69</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(0,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>70</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(excessDamage,&nbsp;damageRemaining);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>71</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>72</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>73</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>74</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Recharge_on_fully_charged_shield_does_not_call_RequestEnergy_on_ship()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>75</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>76</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;deltaT&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;shieldRechargeRate&nbsp;/&nbsp;10F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>77</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>78</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Recharge(deltaT);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>79</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>80</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(shieldStartLevel,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>81</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ship.DidNotReceive().RequestEnergy(Arg.Any&lt;float&gt;());</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>82</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>83</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>84</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>85</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Recharge_requests_energy_from_ship_and_increases_SheildLevel_by_factor_of_deltaT_and_RechargeRate()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>86</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>87</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;damage&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;2F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>88</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;deltaT&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;shieldRechargeRate&nbsp;/&nbsp;10F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>89</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;expectedIncrease&nbsp;=&nbsp;deltaT&nbsp;*&nbsp;shieldRechargeRate;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>90</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>91</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Damage(damage);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>92</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Recharge(deltaT);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>93</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>94</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(shieldStartLevel&nbsp;-&nbsp;damage&nbsp;+&nbsp;expectedIncrease,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>95</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ship.Received().RequestEnergy(expectedIncrease);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>96</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>97</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>98</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>99</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Recharge_only_requests_what_it_needs_to_reach_maxium_ShieldLevel()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>100</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>101</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;damage&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;2F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>102</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;deltaT&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;shieldRechargeRate&nbsp;*&nbsp;2F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>103</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>104</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Damage(damage);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>105</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Recharge(deltaT);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>106</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>107</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(shieldStartLevel,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>108</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ship.Received().RequestEnergy(damage);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>109</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>110</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>111</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>112</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Recharge_has_no_effect_if_no_energy_available()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>113</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>114</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;damage&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;2F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>115</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;deltaT&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;shieldRechargeRate;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>116</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>117</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ship.RequestEnergy(Arg.Any&lt;float&gt;()).Returns(0F);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>118</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>119</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Damage(damage);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>120</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>121</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Recharge(deltaT);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>122</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>123</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(shieldStartLevel&nbsp;-&nbsp;damage,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>124</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>125</code></td><td class="light"><code></code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>126</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[Test]</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>127</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Recharge_only_recharges_by_available_energy()</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>128</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>129</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;damage&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;2F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>130</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;deltaT&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;shieldRechargeRate;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>131</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;energyAvailable&nbsp;=&nbsp;shieldStartLevel&nbsp;/&nbsp;4F;</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>132</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>133</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ship.RequestEnergy(Arg.Any&lt;float&gt;()).Returns(energyAvailable);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>134</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>135</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Damage(damage);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>136</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>137</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_shield.Recharge(deltaT);</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>138</code></td><td class="light"><code></code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>139</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.AreEqual(shieldStartLevel&nbsp;-&nbsp;damage&nbsp;+&nbsp;energyAvailable,&nbsp;_shield.Level);</code></td></tr>
<tr><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>140</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>141</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>142</code></td><td class="light"><code>}</code></td></tr>
</table>
<div class="footer">Generated by: ReportGenerator 1.6.1.0<br />04/11/2012 - 00:08:55<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>