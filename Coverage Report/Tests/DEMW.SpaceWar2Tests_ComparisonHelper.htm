<!DOCTYPE html>
<html>
<html><head>
<meta charset="utf-8" />
<title>DEMW.SpaceWar2Tests.TestUtils.ComparisonHelper - Coverage Report</title>
<link rel="stylesheet" type="text/css" href="report.css" />
<script type="text/javascript">
/* <![CDATA[ */
document.getElementsByClassName = function(cl) {
  var retnode = [];
  var myclass = new RegExp('\\b'+cl+'\\b');
  var elem = this.getElementsByTagName('*');
  for (var i = 0; i < elem.length; i++) {
    var classes = elem[i].className;
    if (myclass.test(classes)) {
      retnode.push(elem[i]);
    }
  }
  return retnode;
};

function switchTestMethod() {
  var testMethodName = this.getAttribute('value');

  var lineCoverageTables = document.getElementsByClassName('lineAnalysis');

  for (var i = 0, j = lineCoverageTables.length; i < j; i++) {
    var lines = lineCoverageTables[i].getElementsByTagName('tr');
    for (var k = 1, l = lines.length; k < l; k++) {
      var coverageData = JSON.parse(lines[k].getAttribute('data-coverage').replace(/'/g, '"'));
      var lineAnalysis = coverageData[testMethodName];
      var cells = lines[k].getElementsByTagName('td');
      if (lineAnalysis == null) {
        lineAnalysis = coverageData['AllTestMethods'];
        if (lineAnalysis.LVS != 'gray') {
          cells[0].setAttribute('class', 'red');
          cells[1].innerText = '0';
        }
      } else {
        cells[0].setAttribute('class', lineAnalysis.LVS);
        cells[1].innerText = lineAnalysis.VC;
      }
    }
  }
}

function togglePin() {
  var testMethodElement = document.getElementById('testmethods');
  testMethodElement.className = testMethodElement.className == '' ? 'pinned' : '';

  return false;
}

function init() {
  var testMethodInputElements = document.getElementsByTagName('input');
  for (var i = 0, j = testMethodInputElements.length; i < j; i++) {
    testMethodInputElements[i].onchange = switchTestMethod;
  }

  document.getElementById('pin').onclick = togglePin;

  if (navigator.appName == 'Microsoft Internet Explorer') {
    document.getElementById('pinheader').style.width = 'auto';
  }
}

window.onload = init;
/* ]]> */
</script>
</head><body><div class="container">
<h1>Summary</h1>
<table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Class:</th><td>DEMW.SpaceWar2Tests.TestUtils.ComparisonHelper</td></tr>
<tr><th>Assembly:</th><td>DEMW.SpaceWar2Tests</td></tr>
<tr><th>File(s):</th><td><a href="#CUsersMattDocumentsGitHubSpaceWar2SpaceWar2TestsTestUtilsComparisonHelpercs">C:\Users\Matt\Documents\GitHub\SpaceWar2\SpaceWar2Tests\TestUtils\ComparisonHelper.cs</a></td></tr>
<tr><th>Coverage:</th><td>100%</td></tr>
<tr><th>Covered lines:</th><td>7</td></tr>
<tr><th>Coverable lines:</th><td>7</td></tr>
<tr><th>Total lines:</th><td>24</td></tr>
</table>
<h1>Metrics</h1>
<table class="overview">
<tr><th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr>
<tr><td title="System.Boolean DEMW.SpaceWar2Tests.TestUtils.ComparisonHelper::Matches(DEMW.SpaceWar2.Physics.Force,DEMW.SpaceWar2.Physics.Force)">Matches(...)</td><td>4</td><td>100</td><td>66</td></tr>
<tr><td title="System.Boolean DEMW.SpaceWar2Tests.TestUtils.ComparisonHelper::Matches(System.Single,System.Single)">Matches(...)</td><td>1</td><td>100</td><td>100</td></tr>
</table>
<h1>File(s)</h1>
<h2 id="CUsersMattDocumentsGitHubSpaceWar2SpaceWar2TestsTestUtilsComparisonHelpercs">C:\Users\Matt\Documents\GitHub\SpaceWar2\SpaceWar2Tests\TestUtils\ComparisonHelper.cs</h2>
<table class="lineAnalysis">
<tr><th></th><th>#</th><th>Line</th><th>Coverage</th></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>1</code></td><td class="light"><code>using&nbsp;System;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>2</code></td><td class="light"><code>using&nbsp;DEMW.SpaceWar2.Physics;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>3</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>4</code></td><td class="light"><code>namespace&nbsp;DEMW.SpaceWar2Tests.TestUtils</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>5</code></td><td class="light"><code>{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>6</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;public&nbsp;class&nbsp;ComparisonHelper</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>7</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>8</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;bool&nbsp;Matches(this&nbsp;Force&nbsp;expectedForce,&nbsp;Force&nbsp;actualForce)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '24', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">24</td><td class="right"><code>9</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '24', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">24</td><td class="right"><code>10</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Matches(expectedForce.Displacement.X,&nbsp;actualForce.Displacement.X)&nbsp;&amp;&amp;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>11</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matches(expectedForce.Displacement.Y,&nbsp;actualForce.Displacement.Y)&nbsp;&amp;&amp;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>12</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matches(expectedForce.Vector.X,&nbsp;actualForce.Vector.X)&nbsp;&amp;&amp;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>13</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matches(expectedForce.Vector.Y,&nbsp;actualForce.Vector.Y);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '24', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">24</td><td class="right"><code>14</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>15</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>16</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;bool&nbsp;Matches(this&nbsp;float&nbsp;actual,&nbsp;float&nbsp;expected)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '76', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">76</td><td class="right"><code>17</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>18</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;float&nbsp;EPSILON&nbsp;=&nbsp;0.00001f;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>19</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '76', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">76</td><td class="right"><code>20</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;matchFloat&nbsp;=&nbsp;Math.Abs(expected&nbsp;-&nbsp;actual)&nbsp;&lt;&nbsp;EPSILON;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '76', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">76</td><td class="right"><code>21</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;matchFloat;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '76', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">76</td><td class="right"><code>22</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>23</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>24</code></td><td class="light"><code>}</code></td></tr>
</table>
<div class="footer">Generated by: ReportGenerator 1.7.2.0<br />25/12/2012 - 00:31:43<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>