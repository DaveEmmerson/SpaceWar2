<!DOCTYPE html>
<html>
<html><head>
<meta charset="utf-8" />
<title>DEMW.SpaceWar2.GameObjects.ShipComponents.Thruster - Coverage Report</title>
<link rel="stylesheet" type="text/css" href="report.css" />
<script type="text/javascript">
/* <![CDATA[ */
document.getElementsByClassName = function(cl) {
  var retnode = [];
  var myclass = new RegExp('\\b'+cl+'\\b');
  var elem = this.getElementsByTagName('*');
  for (var i = 0; i < elem.length; i++) {
    var classes = elem[i].className;
    if (myclass.test(classes)) {
      retnode.push(elem[i]);
    }
  }
  return retnode;
};

function switchTestMethod() {
  var testMethodName = this.getAttribute('value');

  var lineCoverageTables = document.getElementsByClassName('lineAnalysis');

  for (var i = 0, j = lineCoverageTables.length; i < j; i++) {
    var lines = lineCoverageTables[i].getElementsByTagName('tr');
    for (var k = 1, l = lines.length; k < l; k++) {
      var coverageData = JSON.parse(lines[k].getAttribute('data-coverage').replace(/'/g, '"'));
      var lineAnalysis = coverageData[testMethodName];
      var cells = lines[k].getElementsByTagName('td');
      if (lineAnalysis == null) {
        lineAnalysis = coverageData['AllTestMethods'];
        if (lineAnalysis.LVS != 'gray') {
          cells[0].setAttribute('class', 'red');
          cells[1].innerText = '0';
        }
      } else {
        cells[0].setAttribute('class', lineAnalysis.LVS);
        cells[1].innerText = lineAnalysis.VC;
      }
    }
  }
}

function togglePin() {
  var testMethodElement = document.getElementById('testmethods');
  testMethodElement.className = testMethodElement.className == '' ? 'pinned' : '';

  return false;
}

function init() {
  var testMethodInputElements = document.getElementsByTagName('input');
  for (var i = 0, j = testMethodInputElements.length; i < j; i++) {
    testMethodInputElements[i].onchange = switchTestMethod;
  }

  document.getElementById('pin').onclick = togglePin;

  if (navigator.appName == 'Microsoft Internet Explorer') {
    document.getElementById('pinheader').style.width = 'auto';
  }
}

window.onload = init;
/* ]]> */
</script>
</head><body><div class="container">
<h1>Summary</h1>
<table class="overview">
<colgroup>
<col width="130" />
<col />
</colgroup>
<tr><th>Class:</th><td>DEMW.SpaceWar2.GameObjects.ShipComponents.Thruster</td></tr>
<tr><th>Assembly:</th><td>DEMW.SpaceWar2</td></tr>
<tr><th>File(s):</th><td><a href="#CUsersMattDocumentsGitHubSpaceWar2SpaceWar2GameObjectsShipComponentsThrustercs">C:\Users\Matt\Documents\GitHub\SpaceWar2\SpaceWar2\GameObjects\ShipComponents\Thruster.cs</a></td></tr>
<tr><th>Coverage:</th><td>100%</td></tr>
<tr><th>Covered lines:</th><td>23</td></tr>
<tr><th>Coverable lines:</th><td>23</td></tr>
<tr><th>Total lines:</th><td>49</td></tr>
</table>
<h1>Metrics</h1>
<table class="overview">
<tr><th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr>
<tr><td title="System.Void DEMW.SpaceWar2.GameObjects.ShipComponents.Thruster::.ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single)">.ctor(...)</td><td>2</td><td>100</td><td>100</td></tr>
<tr><td title="DEMW.SpaceWar2.Physics.Force DEMW.SpaceWar2.GameObjects.ShipComponents.Thruster::Engage(System.Single)">Engage(...)</td><td>3</td><td>100</td><td>100</td></tr>
</table>
<h1>File(s)</h1>
<h2 id="CUsersMattDocumentsGitHubSpaceWar2SpaceWar2GameObjectsShipComponentsThrustercs">C:\Users\Matt\Documents\GitHub\SpaceWar2\SpaceWar2\GameObjects\ShipComponents\Thruster.cs</h2>
<table class="lineAnalysis">
<tr><th></th><th>#</th><th>Line</th><th>Coverage</th></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>1</code></td><td class="light"><code>using&nbsp;System;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>2</code></td><td class="light"><code>using&nbsp;DEMW.SpaceWar2.Physics;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>3</code></td><td class="light"><code>using&nbsp;Microsoft.Xna.Framework;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>4</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>5</code></td><td class="light"><code>namespace&nbsp;DEMW.SpaceWar2.GameObjects.ShipComponents</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>6</code></td><td class="light"><code>{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>7</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;Thruster</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>8</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>9</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;Vector2&nbsp;_direction;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>10</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;Vector2&nbsp;_position;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>11</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;float&nbsp;_maxEnergyDraw;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>12</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '70', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">70</td><td class="right"><code>13</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Thruster(Vector2&nbsp;position,&nbsp;Vector2&nbsp;direction,&nbsp;float&nbsp;maxEnergyDraw)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '70', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">70</td><td class="right"><code>14</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '70', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">70</td><td class="right"><code>15</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_position&nbsp;=&nbsp;position;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '70', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">70</td><td class="right"><code>16</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_direction&nbsp;=&nbsp;direction;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '70', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">70</td><td class="right"><code>17</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(maxEnergyDraw&nbsp;&lt;=&nbsp;0)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>18</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">2</td><td class="right"><code>19</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;ArgumentException(&quot;Must&nbsp;be&nbsp;positive&nbsp;and&nbsp;non-zero.&quot;,&nbsp;&quot;maxEnergyDraw&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>20</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '68', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">68</td><td class="right"><code>21</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_maxEnergyDraw&nbsp;=&nbsp;maxEnergyDraw;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '68', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">68</td><td class="right"><code>22</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>23</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '111', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">111</td><td class="right"><code>24</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;float&nbsp;EnergyRequired&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;Throttle&nbsp;*&nbsp;_maxEnergyDraw;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>25</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>26</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;float&nbsp;_throttle;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>27</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;float&nbsp;Throttle</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>28</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '240', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">240</td><td class="right"><code>29</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;_throttle;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '198', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">198</td><td class="right"><code>30</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&nbsp;{&nbsp;_throttle&nbsp;=&nbsp;value&nbsp;&lt;&nbsp;0f&nbsp;?&nbsp;0f&nbsp;:&nbsp;value&nbsp;&gt;&nbsp;1f&nbsp;?&nbsp;1f&nbsp;:&nbsp;value;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>31</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>32</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>33</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Force&nbsp;Engage(float&nbsp;energyScalingFactor)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>34</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>35</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(energyScalingFactor&nbsp;&lt;=&nbsp;0f)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">6</td><td class="right"><code>36</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">6</td><td class="right"><code>37</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Force(Vector2.Zero,&nbsp;_position);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>38</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>39</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '28', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">28</td><td class="right"><code>40</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(energyScalingFactor&nbsp;&gt;&nbsp;1f)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>41</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>42</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;energyScalingFactor&nbsp;=&nbsp;1f;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">1</td><td class="right"><code>43</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>44</code></td><td class="light"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '28', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">28</td><td class="right"><code>45</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Vector2&nbsp;thrust&nbsp;=&nbsp;energyScalingFactor&nbsp;*&nbsp;Throttle&nbsp;*&nbsp;_direction;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '28', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">28</td><td class="right"><code>46</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;Force(thrust,&nbsp;_position);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin right">34</td><td class="right"><code>47</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>48</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin right"></td><td class="right"><code>49</code></td><td class="light"><code>}</code></td></tr>
</table>
<div class="footer">Generated by: ReportGenerator 1.7.2.0<br />25/12/2012 - 00:31:42<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>